from dotenv import load_dotenv
from langchain.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain_core.output_parsers import StrOutputParser
from langchain_openai import ChatOpenAI
from langchain_community.chat_message_histories import SQLChatMessageHistory
from langchain_core.runnables.history import RunnableWithMessageHistory

# Carregar as chas APIs presentes no arquivo .env
load_dotenv()
# --------------------------------------------------------------------------------

## Criando o gestor de mem√≥ria (hist√≥rico)
# Fun√ß√£o para retornar o hist√≥rico de mensagens com base no session_id

def get_session_history(session_id):
    return SQLChatMessageHistory(session_id, connection="sqlite:///memory.db")

# --------------------------------------------------------------------------------

# Instancias um chatmodel para comunicarmos com os modelos LLMs
model = ChatOpenAI(model="gpt-4o", temperature=0.2)

# --------------------------------------------------------------------------------

# Definindo o prompt de chatbot que tira duvidas do usu√°rio:

sys_chatbot_prompt = """ Voc√™ √© um assistente de uma clinica odontol√≥gica e tem como objetivo responder √† perguntas dos clientes. A seguir voc√™ \  
encontra a FAQ do nosso site, use essas informa√ß√µes para realizar o atendimento e tirar d√∫vidas. Caso voc√™ desconhe√ßa alguma \  
informa√ß√£o, n√£o invente. Seja sempre amig√°vel e esteja disposto a ajudar!  

**FAQ - Cl√≠nica Odontol√≥gica**  
1. **Quais servi√ßos a cl√≠nica oferece?**    
   Oferecemos tratamentos como limpeza dental, clareamento, ortodontia, implantes, pr√≥teses, tratamento de canal e est√©tica dental.  
2. **A cl√≠nica aceita conv√™nios?**    
   Sim, trabalhamos com os principais conv√™nios odontol√≥gicos. Consulte nossa equipe para verificar se aceitamos o seu.  
3. **Como agendar uma consulta?**    
   Voc√™ pode agendar sua consulta pelo telefone, WhatsApp ou diretamente em nosso site.  
4. **Quanto tempo dura uma consulta?**    
   Depende do procedimento, mas consultas de rotina geralmente duram entre 30 e 60 minutos.  
5. **Voc√™s atendem emerg√™ncias?**    
   Sim, oferecemos atendimento emergencial para dores agudas, traumas ou casos de urg√™ncia.  
6. **√â poss√≠vel parcelar tratamentos?**    
   Sim, oferecemos op√ß√µes de parcelamento. Entre em contato para conhecer os detalhes.  
7. **Crian√ßas podem ser atendidas na cl√≠nica?**    
   Sim, contamos com profissionais especializados em odontopediatria para cuidar dos sorrisos dos pequenos.  
8. **O clareamento dental √© seguro?**    
   Sim, nossos tratamentos de clareamento s√£o realizados com t√©cnicas e produtos seguros, supervisionados por especialistas.  
Se tiver mais d√∫vidas, entre em contato conosco! üòä  
"""

prompt_template_chatbot = ChatPromptTemplate.from_messages([
    ("system", sys_chatbot_prompt),
    MessagesPlaceholder(variable_name="history"),
    ("human", "D√∫vida do usu√°rio: {input}"),
]
)

chain_chatbot = prompt_template_chatbot | model | StrOutputParser()

# --------------------------------------------------------------------------------
## Encapsulando nossa chain com a classe de gest√£o de mensagens de hist√≥rico
# Criando a fun√ß√£o que corta o hist√≥rico de mensagem para 2 ultimas mensagens trocadas:
from operator import itemgetter

from langchain_core.messages import trim_messages
from langchain_core.runnables import RunnablePassthrough

trimmer = trim_messages(strategy="last", max_tokens=2, token_counter=len)

chain_with_trimming = (
    RunnablePassthrough.assign(history=itemgetter("history") | trimmer)
    | chain_chatbot
)

runnable_with_history = RunnableWithMessageHistory(
    chain_with_trimming,
    get_session_history,
    input_messages_key="input",
    history_messages_key="history",
)
# --------------------------------------------------------------------------------


# Executando nossa chain principal.
result = runnable_with_history.invoke(
    {"input": "Qual a historia do meu time palmeiras em resumo"},
    config={"configurable": {"session_id": "1"}},
)

# --------------------------------------------------------------------------------
# Imprimindo a saida.
print("---------------")
print(result)
print("---------------")